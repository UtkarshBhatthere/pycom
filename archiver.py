from os import path, mkdir
import shutil

class archiver:

    def check_files(self,pathname : str, verification_list : list):
        '''
        Checks the presence of all the files passed in as a list and generates a report.
        '''
        print("Checking Files")
        stat = list()
        for files in verification_list:
            temp = f"File '{files}' exists : {path.exists(pathname + '/' + files)}"
            stat.append(temp)
        return stat

    def __init__(self, tozip_pathname : str, verification_list : list):
        
        projectname = tozip_pathname.split('/')[-1]
        if(not path.exists(f'ZIP_Output/{projectname}')):
            mkdir(f'ZIP_Output/{projectname}')

        # Generating report list
        report = self.check_files(tozip_pathname, verification_list)
        with open(f"ZIP_Output/{projectname}/report.txt", 'w+') as report_file:
            for file_stat in report:
                report_file.write(f"{file_stat}\n")
            report_file.write("/nThis report is automatically generated by Archiver module in pycom")

        # Compressing the CSV_Output folder
        shutil.make_archive(f"ZIP_Output/{projectname}/CSV", 'zip', f"CSV_Output/{projectname}")
        shutil.make_archive(f"ZIP_Output/{projectname}/Graphs", 'zip', f"Graph_Output/{projectname}")